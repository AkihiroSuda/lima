name: setup go with cache
description: setup go with cache. export GOMODCACHE environment variable
inputs:
  go-version:
    description: go version
    required: true
  runs-on:
    description: runs on
    required: true
  working-directory:
    description: working directory
    default: '.'
runs:
  using: "composite"
  steps:
  - id: setup-go
    uses: actions/setup-go@v5
    with:
      cache: false
      go-version: ${{ inputs.go-version }}
  - name: Set GOMODCACHE environment variable
    if: runner.os != 'Windows'
    run: echo "GOMODCACHE=$(pwd)/.gomodcache" >> $GITHUB_ENV
    shell: bash
  - name: Set GOMODCACHE environment variable on Windows
    if: runner.os == 'Windows'
    run: echo "GOMODCACHE=$(cygpath -w $(pwd)/.gomodcache)" >> $GITHUB_ENV
    shell: bash
  - id: go-env
    run: |
      echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_OUTPUT
      echo "GOMOD=$(go env GOMOD)" >> $GITHUB_OUTPUT
      echo "GOSUM=$(go env GOMOD|sed 's/\.mod$/.sum/')" >> $GITHUB_OUTPUT
    shell: bash
    working-directory: ${{ inputs.working-directory }}
  - name: Cache go modules
    uses: actions/cache@v4
    with:
      path: .gomodcache
      key: go-modcache-${{ inputs.working-directory }}-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles(steps.go-env.outputs.GOMOD) }}
      restore-keys: |
        go-modcache-${{ inputs.working-directory }}-${{ steps.setup-go.outputs.go-version }}-
        go-modcache-${{ inputs.working-directory }}-
      enableCrossOsArchive: true
  - name: Cache go build cache
    uses: actions/cache@v4
    with:
      path: ${{ steps.go-env.outputs.GOCACHE }}
      key: go-cache-${{ inputs.working-directory }}-${{ inputs.runs-on }}-${{ steps.setup-go.outputs.go-version }}-${{ hashFiles(steps.go-env.outputs.GOSUM) }}
      restore-keys: |
        go-cache-${{ inputs.working-directory }}-${{ inputs.runs-on }}-${{ steps.setup-go.outputs.go-version }}-
        go-cache-${{ inputs.working-directory }}-${{ inputs.runs-on }}-
        go-cache-${{ inputs.working-directory }}-
  - name: Download dependencies
    run: go mod download -x
    shell: bash
    working-directory: ${{ inputs.working-directory }}
